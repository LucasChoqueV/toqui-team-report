name: BuildAndDeploy
on: [workflow_dispatch]
jobs:
  build_app:
    name: Build app
    runs-on: ubuntu-latest
    environment:
      name: staging
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Configure env file
        run: |
          touch .env.production
          echo VITE_TOQUI_JIRA_REPORT_API=${{ vars.VITE_TOQUI_JIRA_REPORT_API }} >> .env.production
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./dockerfile
          push: true
          tags: ${{ vars.DOCKER_IMAGE }}:${{ github.run_number }}
  deploy_app:
    name: Deploy app
    needs: build_app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up SSH
        run: |
          echo "apt get update"
          sudo apt-get update -y
          echo "apt get isntall openssh"
          sudo apt-get install openssh-client -y
          echo "eval"
          eval $(ssh-agent -s)
          echo "ssh-add"
          echo "${{ secrets.KEY }}" | base64 --decode > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa
          ssh-add ~/.ssh/id_rsa
          mkdir -p ~/.ssh
          echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

      - name: Execute deployment script via SSH
        run: |
          ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'bash -s' < deploy.sh ${{ vars.DOCKER_IMAGE }}:${{ github.run_number }} ${{ vars.VITE_TOQUI_JIRA_REPORT_API }} ${{ secrets.DOCKER_USERNAME }} ${{ secrets.DOCKER_PASSWORD }}