name: BuildAndDeploy
on: [workflow_dispatch]
jobs:
  build_app:
    name: Build app
    runs-on: ubuntu-latest
    environment:
      name: staging
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Configure env file
        run: |
          touch .env.production
          echo VITE_TOQUI_JIRA_REPORT_API=${{ vars.VITE_TOQUI_JIRA_REPORT_API }} >> .env.production
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./dockerfile
          push: true
          tags: ${{ vars.DOCKER_IMAGE }}:${{ github.run_number }}
  deploy_app:
    name: Deploy app
    needs: build_app
    environment:
      name: staging
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up SSH
        run: |
          echo "apt get update"
          sudo apt-get update -y
          echo "apt get isntall openssh"
          sudo apt-get install openssh-client -y
          echo "eval"
          eval $(ssh-agent -s)
          echo "mkdir"
          mkdir -p ~/.ssh
          echo "base64 decode"
          echo "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQ0KTUlJSktRSUJBQUtDQWdFQW5XdmVsMGQvdW15K1MwdmVBV20vdDFaNGprcElJUFpGeW5FbmxxMC8yRElTUCt3MA0KU3Z3a1ljQ1NOT2J2N2tLWWNhNmR6ZWt3NkExU0tIMGJyZ1pXeDlBZ2ZKdHo0bUhMM0VQWkFVWDF4RmJ2bmUvcw0KdWVXYkYxOGJONTVzREZDMzY3MFNhcE56ckZPZmlGVmpBZlFZdVBDLzBKZzB1bTBOZnJRQ1J0MEhqOW1JMmsxMQ0KYit1ajhsU25FbzBOUVlDT00xNDgzM1B2VVRmbjMwd1R2RFNRNGVLc3hDUlNJeDZyeGpBcGZnYWZiVWY3STVPTQ0KTjVvU3UyWUtMS1Byb3Rhbk1DL3VHRURYbVNIZGthcmFtWmhKOW9oU2RKSFl4eC9lOXhORFBCbHFiS3VHeS9IdA0KcXFIaFgxRzFQV0VlT2hhYUtkV3BxK3FHRC9HcjhmbDJ4Wmk5OGFTYnJDaVpLNEZPT3BlY2U2K1lRZXo2SU5iMQ0KY3VuMVdCRHZJWDVReUQzOXVLSlA1RFRKSUpIdnR0VmNDVHlubjByUW1RY0NldnVrelBWajQ5N2ljWkhZcVg5Ng0KQmhCdVVTYVk5S3RmbGx4YXBPellxTkxIQStlWW9Xbm9QaWdsWm9EdWZ3MnVtTmkrREVsMVp5QVpyVEI2bG0yVQ0KbVhhZFEveEt1d09GWWVjdUFoK2RGcGdkT1Bib3Y1dXY0TjJnZWh1Y1hHUk9iV2N1QUw0emNMRFBJejVUeDlVYg0KazROdXpsRG1panVvbTBLNktpOERKaXUwcWxzRkRYRHoxd2o4aXBFTHlzWDYzR3h4OEJCZ242czBNaUEzU3habw0KdDVCZWRvMDZ0cjJUWm1SQVhYbWM5Tys5WUFBRUxhdzJNVldYMWdsWjN0RWNURXppQUhzMUF3S2Q4RlVDQXdFQQ0KQVFLQ0FnQTlyeGI1a0Rxc2dnL08wVnVja2lOZFk3UzVqTUhXcUttUU9lYVpWQ25BUFY2SlRiVHY3UDBVa0xDNQ0KcWdRNkNENVR6V2hvVndlaTVoVmJhQ3FBZGx0cTBGTHFnTDlYNVpwTUpRblRSZWFYbUxrcjJlZVlzQytsYU03eA0KYkZKS1FSYlFlTFhPclJpV1hlNFZMZUF0MDhnY0w3bjVzcXAyb21TM1VUSFRNcWpUNVJtSzhPOGplK0l5QXBtMA0KMnpCbWlra3VONjhDb0JzV2FDR2pqZHZ0MDJzeUYvQTZxMERFSWpDTTZESlovNTVZNCt1MGRReHNmU0w1NjNIeA0KTEFvWk5LTXVicG1OUjFzejFlRk1RdmFGV1BjaWN5aGNKUW9jZkpDUm9DcW9VZzB4cDhTYUJhSnJTaU5WaGw3Tw0KUGsvcDB4RjFjeE9aR2J5T1l0Uk5iTUx0aW54aXBoUUZXMHBVTDVraXVKVFo5amFOKzdjU3J4ZkN1cUJNUE5IRw0KZ3RCZlUwQ2xSVkVMOTF3SVlvTkZ1eGs5U294OWx6NC9JbzFtbmZDejBZbkg2SzNKd1dYU3grN2VDZ1Z3MGNRSw0KMzRRR3VuTlF0K3pBT3hEM0JRbzJyWUVRVDdpcEFtM0xZU3BhNkM1djdMem1BNDBoVndSUmpvV3E3M2RoN0xaVQ0KK0xxZm1COU5LY0l6cElremR6QnhLbTVQTVpDSFIrVFptL1B2clRWYyttZUIxcmY1cktUcDFIMmZuVWNLNEM2TQ0KSGZpckNHa0JMVGs1SjBRUzViWXRvSFFZKzhqL2lweW95bmd2a3JZbGVsOTNZRmhPZWlUOHJxSFZWWFZRenBDNw0KTTVKdW1LbFI3Y1FtT3JtNHBlNDFjRFUrRTcxNHJkWEpVenQ0d2RFV1JYM0NoUEo0QVFLQ0FRRUF4Uzk3YVhpSA0KT3FEcUI2NG5TOWZxNGEzdHdXNTljaEs0ZWNEZW9xVWFQbDI4M2lXNTJoTlZtL1lJSUoxZ3Zwbmd3bERpYzltRA0KL01DUU5IWGsvbllyamFJNGZtclExdkdPTmRCNXNtdEplcnRwS1k2cGR3Y0lGNXIydEw1NVdWbHprcnN2QXovaA0KaVYvZGNkUUpDcmtKbUdUbTNTK2V2SGJzMVRFOUZiMHh0TEtaVDJDNEMzd3lqK0g5bno5OGNpekcwbHo4c1NCRw0KbWd5OER3R0xTbDdkQWh1SVFxaTJLbm0vaGNFSmx0N21ZSDYvMjZXRDV4TUpzc3ZpRGtqOEJiUWpnM2RwdVpZZw0KYkIyK1dDaGZxYmJ1MFZhbXd3d01xb0hUZHlsOEFodjZ1Tm9jUHJDeWZmNUI4SlE4MVdyd1lXQnc5ZGxFUnVjMg0KMjVNNGRVYjZOSFF5OVFLQ0FRRUF6R0FkSW9BSFl4aFJMdURuK2xET2ZQakwwenJidzhjZTVzcXk4U0o4clNtMQ0KTlFkaG5obDczTkUvRWprU1hSbE9ocUJZOElEQ1AwSFk0aUZDekw5WmU5ZlF1amxxa2FneWhSSTBIa25qOGNxQg0KckFiczhCTVFLemFtelgxZWp6bkNMQVRyWjlmZDRsWE8zdGJ1dnpjZXNCenYrVzhYM1dCaW1KVVd2WjNXWHRXaQ0KZG5GWmlhRkRwYXZyQjNNcTEwY2NlU0wzc21oQThyamFUSlFHNmNVZ0VYekUreXE2b0lIUS9wSlJ5UEp5LzdNYQ0KL2NUdFkzRmJWZjFTdDFoMWFWZ1VqZ1FuNERPcTAzT3hvbnBzL0xVWnAxM0lWajl3Y3BoM3FjQWE4dFpOYWNQdg0KcDN1Y2t1eGgyaGhycThnVXJyZlVTNm1HTVhvSFJpVHBTeDBCNjNZcjRRS0NBUUVBcENZejZZaFJvc2ZrS3dLYQ0KYWZQVDc0MVgrSWZmWEVBalhBL29CcVBFNWhnb3F4SGkxcHp6em9LUkgzMkQxUWZLYUZqbk95UGZVV0NJYTNPZA0KYnd1MmxCQndVU1RndDU2ZEVVVjhtYi9naXBCTEtqSTk5djFlaWpBUm9rTlNSOFJFaHVqV2FURWJzcjJnWGlyeQ0KWC8vTDhoWkZiZW8vallxKyszY2k3OTd3NndrbXdVSzEwN0hQY2FIaS9WZmZaRGpNUnNEc0J4UGtVa2U1b2hCYQ0KQVU1WlUzRFNEUlBmbWhxQ0NubTVYdVF1Q2pSWnlTTFBYR1NuMVRVTytXOWVoZTBCQjJjNEZ5dlh6OGt1OUxxZg0KY0d2K0FUek9WRjdLaUlMTkpFemZrKzN3MlVPUThjc3N1K0FXeW96TTI2bExkUFRROUlpcTR3K0Z4bUtYUkdJUw0KMWVuSnBRS0NBUUE3TXEvZHVXWHFYelhNdFZxY1YrR25zMDBlenhLdS83TkV1SHZpZXRIUU9wK0JUN1VIM1d2Uw0KUjAzVWtuRnVSQkZKejVKVGY0aEVXR2RoQUs5ZnJTRlhUT2pwdUEzVlNQbnhMNWVuR2xJTFRGUUpKeXhrVWJGQw0KUXg5SHNFTytpc1ZpaUw1REl2VGpSV1daaUhvNUt0Y1p2aGdJa1JSQmpGU2l5N1I5a2dWeERNSjFPbG5zRXFrTQ0KaU9LWUV0VGE3SDhqMjJ3UjRqN0Z6Nk56d1FETG44eXRKQTNPanM3bUJSUXJXT2lWb3h5S1VpL0VSOUZYRjVPVQ0KTWI5TzJqR1FKUEkzUEo3c1F5cjgrcXIrWENYTGdRMkFQQnIyV0lQU3ZiVVRsMUIyL0hvSjQ3WThOZ0xoVDlUOA0KSGt5NXdrZXpZQTMvS0loMU5scDdCK0FIWU15WWptOGhBb0lCQVFDTDJzV1A0clJDY1M5YTRrVnREZG9FbjZNNw0KS3Q1Q3pKZi8yL1lPUk03RFZzTWtiVmZnQWw2Y1crdzBFQTVROEVNZVAwWnRjR2VMdk1oMnp5a0xrMFVUWUNxUw0KRVZpR3ZUL3BHcE9QQTRGWk42WDFSZ2FqV0V5YjBtWEt6Qjl0S1ZTRXFPNmdOSUVHbzhiUUlOS1pqNmFOV0lNRg0KUHY3WGQxQmJhK0V3WE50amY5VXJKK216U0U1RVE0UFFXSm14cmI4WEd1aDRXa01SYVNFRU1PSCtuSW9JRTJXcQ0KL2VmT2laL091UEMzb3hnWU96UXRQS3lOcEJpWklKaFlKMGJiSGZUdnFzMmFHTStsWDlWakZRVkhTRDFyMDR2Nw0KUFBydW5vNlRPaUR5c2hUVSt4WG92OHgwYmlMbTc1bHdlMjFQTHhXdzNIaXc3TzFvaXcvRTBXSjAvT010DQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==" | base64 --decode > ~/.ssh/id_rsa
          echo "chmod 400"
          chmod 400 ~/.ssh/id_rsa
          echo "cat id_rsa"
          cat ~/.ssh/id_rsa
          ls ~/.ssh
          ls -la
          echo "ssh-add"
          ssh-add ~/.ssh/id_rsa
          echo "config"
          echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

      - name: Execute deployment script via SSH
        run: |
          ssh ${{ secrets.SSH_USER }}@3.15.22.97 'bash -s' < deploy/deploy.sh lucasdaniel98/tr-web-app:${{ github.run_number }} http://ec2-3-133-126-27.us-east-2.compute.amazonaws.com/api/report ${{ secrets.DOCKER_USERNAME }} ${{ secrets.DOCKER_PASSWORD }}